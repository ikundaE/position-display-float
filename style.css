.parent-container {
    background-color: beige;
    border: 2px solid black;
    width: 75vw;
    height: 75vh; /*changed this value from 75vh to prove the difference between static absolute and sticky when scrolling*/
    padding: 5px;
    font-family: Arial, Helvetica, sans-serif;

    position: relative; /*reverting back to static doesn't affect fixed like it did to absolute it stayed outside of the container*/
    /* this causes absolute container to position inside parent container was previously sticking out! */
}

.child {
    padding: 25px;
}

.static {
    border: 2px solid red;
    background-color: red;
    top: 2500px; /* check comment*/
    /* top, bottom, left, right, z-index properties have NO EFFECT */
}

.relative {
    border: 2px solid blueviolet;
    background-color: blueviolet;

    position: relative;/*check comment or bellow*/
    top: 25px;
    left: 25px;
    /* by default acts like static */
    /* can use t,b,l,r to take the element out of document flow */
    /* !DO NOT USE IT! IT IS TOO DEPENDENT ON HUMAN MANUAL HENCE PRONE TO ERROR */
}

.absolute {
    border: 2px solid green;
    background-color: green;

    position: absolute;/*check comment or bellow*/
    /* it takes elements out fo flow */
    top: 0px;
    /* relative to root that's NOT  */
}

.fixed {
    border: 2px solid teal;
    background-color: teal;

    position: fixed;/*check comment or bellow*/
    top: 0px;
    /* ignores parent */
    /* based on ENTIRE VIEWPORT */
    /* absolute on parent relative will scroll */
    /* Fixed WILL NOT scroll away */
}

.sticky {
    border: 2px solid gray;
    background-color: gray;

    position: sticky;/*check comment or bellow*/
    top: 75px;
    /* Acts like a combination of fixed and absolute */
    /* Stays fixed once scroll occurs */
    /* it's relative by default (doesn't move out of normal flow) */
}

/* 
? Display property

* Treat an element as block or inline
* Block are created top-to-bottom
* Inline are positioned side-by-side
 */

 .display-container {
    margin-top:  2me;
 }

 .block-container {
    border:  2px solid black;
    margin-top: 2px;
 }

 .inline-element {
    margin: 5px;
    display: block;
    /* Turns Bottons into blocks and aligns in a column */
 }

 .inline-block {
    border: 2px solid black;
    margin-top: 2px;
    /* Initially a block */
    /* Display: inline */
    /* Acts like a n inline element */
    display: inline-block;
    width: 125px;
    /* Allows us to set the width and height of an inline element */
 }

 .float-container {
    margin-top: 2em;
    border: 2px solid blue;
    height: 20vh;
    width: 50vw;
 }

 .float-box {
    margin: 5px;
    border: 2px solid orange;
    background-color: orange;
    width: 50px;
    height: 50px;

    float: right;
    /* Shifts element from left to right */
 }